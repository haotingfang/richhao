<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.mapper.CardMapper">

    <resultMap type="com.example.common.core.domain.entity.Card" id="CardMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="VARCHAR"/>
        <result property="cardCount" column="card_count" jdbcType="INTEGER"/>
        <result property="cardTerm" column="card_term" jdbcType="VARCHAR"/>
        <result property="storeCurrency" column="store_currency" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="CardMap">
        select id,
               title,
               type,
               card_count,
               card_term,
               store_currency,
               price,
               status,
               create_by,
               create_time,
               update_by,
               update_time,
               remark
        from card
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="CardMap">
        select id,
               title,
               type,
               card_count,
               card_term,
               store_currency,
               price,
               status,
               create_by,
               create_time,
               update_by,
               update_time,
               remark
        from card
        where ( del_flag = 0 or del_flag is null)

        <if test="type != null and type != ''">
            AND type = #{type}
        </if>
        <if test="cardTerm != null and cardTerm != ''">
            AND card_term = #{cardTerm}
        </if>
        <if test="storeCurrency != null and storeCurrency != ''">
            AND store_currency = #{storeCurrency}
        </if>
        <if test="beginTime != null and beginTime != ''"><!-- 开始时间检索 -->
            AND date_format(create_time,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d')
        </if>
        <if test="endTime != null and endTime != ''"><!-- 结束时间检索 -->
            AND date_format(create_time,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')
        </if>
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="CardMap">
        select
        id, title, type, card_count, card_term, store_currency, price, status, create_by, create_time, update_by,
        update_time, remark
        from card
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="title != null and title != ''">
                and title = #{title}
            </if>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>
            <if test="cardCount != null">
                and card_count = #{cardCount}
            </if>
            <if test="cardTerm != null and cardTerm != ''">
                and card_term = #{cardTerm}
            </if>
            <if test="storeCurrency != null and storeCurrency != ''">
                and store_currency = #{storeCurrency}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="createBy != null and createBy != ''">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null and updateBy != ''">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into card(title, type, card_count, card_term, store_currency, price, status, create_by,
                                  create_time, update_by, update_time, remark)
        values (#{title}, #{type}, #{cardCount}, #{cardTerm}, #{storeCurrency}, #{price}, #{status}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{remark})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into card(title, type, card_count, card_term, store_currency, price, status, create_by,
        create_time, update_by, update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.title}, #{entity.type}, #{entity.cardCount}, #{entity.cardTerm}, #{entity.storeCurrency},
            #{entity.price}, #{entity.status}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy},
            #{entity.updateTime}, #{entity.remark})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into card(title, type, card_count, card_term, store_currency, price, status, create_by,
        create_time, update_by, update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.title}, #{entity.type}, #{entity.cardCount}, #{entity.cardTerm}, #{entity.storeCurrency},
            #{entity.price}, #{entity.status}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy},
            #{entity.updateTime}, #{entity.remark})
        </foreach>
        on duplicate key update
        title = values(title) , type = values(type) , card_count = values(card_count) , card_term = values(card_term) ,
        store_currency = values(store_currency) , price = values(price) , status = values(status) , create_by =
        values(create_by) , create_time = values(create_time) , update_by = values(update_by) , update_time =
        values(update_time) , remark = values(remark)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update card
        <set>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="type != null and type != ''">
                type = #{type},
            </if>
            <if test="cardCount != null">
                card_count = #{cardCount},
            </if>
            <if test="cardTerm != null and cardTerm != ''">
                card_term = #{cardTerm},
            </if>
            <if test="storeCurrency != null and storeCurrency != ''">
                store_currency = #{storeCurrency},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="createBy != null and createBy != ''">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteByIds">
        delete
        from card
        where
        where id in
        <foreach collection="ids" item="cardId" open="(" separator="," close=")">
            #{cardId}
        </foreach>
    </delete>

</mapper>