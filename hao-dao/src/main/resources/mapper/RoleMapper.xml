<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.mapper.RoleMapper">

    <resultMap type="com.example.common.core.domain.entity.Role" id="RoleResult">
        <id property="id" column="id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleCode" column="role_code"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="remark" column="remark"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectRoleVo">
	   select role.* from role
       LEFT JOIN relation_user_role on role.id=relation_user_role.role_id
       LEFT JOIN user_info on user_info.user_id=relation_user_role.user_id
    </sql>

    <select id="selectRoleByUserId" parameterType="Long" resultMap="RoleResult">
        <include refid="selectRoleVo"></include>
        where  role.status = '0' and role.del_flag ='0'
        and user_info.user_id=#{userId}
    </select>

    <select id="selectRoleList" parameterType="com.example.common.core.domain.entity.Role" resultMap="RoleResult">
       select role.* from role
        where  role.del_flag ='0'
        <if test=" roleName != null">
          and  role_name like concat('%',#{roleName},'%')
        </if>
        <if test=" roleCode != null">
          and  role_code like concat('%',#{roleCode},'%')
        </if>
        <if test=" status != null">
          and  status = #{status,jdbcType=CHAR}
        </if>
        order by update_time desc
    </select>


    <select id="getRoleInfoById" parameterType="Long" resultMap="RoleResult">
        select role.* from role
        where  role.id = #{id}
    </select>

    <select id="checkRoleNameUnique"  resultType="boolean">
        select IF(count(*)>0,TRUE,FALSE) from role
        where role_name = #{roleName}
        <if test="id != null">
            and id != #{id}
        </if>
    </select>

    <select id="checkRoleCodeUnique"  resultType="boolean">
        select IF(count(*)>0,TRUE,FALSE) from role
        where role_code = #{roleCode}
        <if test="id != null">
            and id != #{id}
        </if>
    </select>

    <insert id="insertRole" parameterType="com.example.common.core.domain.entity.Role" useGeneratedKeys="true" keyProperty="roleId">
        insert into role(
        <if test="id != null and id != 0">id,</if>
        <if test="roleName != null and roleName != ''">role_name,</if>
        <if test="roleCode != null and roleCode != ''">role_code,</if>
        <if test="status != null and status != ''">status,</if>
        <if test="delFlag != null and delFlag != ''">del_flag,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time,
        <if test="updateBy != null and updateBy != ''">update_by,</if>
        update_by
        )values(
        <if test="id != null and id != 0">#{id},</if>
        <if test="roleName != null and roleName != ''">#{roleName},</if>
        <if test="roleCode != null and roleCode != ''">#{roleCode},</if>
        <if test="status != null and status != ''">#{status},</if>
        <if test="delFlag != null and delFlag != ''">#{delFlag},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate(),
        <if test="updateBy != null and updateBy != ''">#{updateBy},</if>
        sysdate()
        )
    </insert>










</mapper>