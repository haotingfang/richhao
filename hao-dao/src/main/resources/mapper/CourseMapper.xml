<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.mapper.CourseMapper">

    <resultMap type="com.example.common.core.domain.entity.Course" id="CourseMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="courseTypeId" column="course_type_id" jdbcType="INTEGER"/>
        <result property="teacherId" column="teacher_id" jdbcType="INTEGER"/>
        <result property="dayTime" column="day_time" jdbcType="TIMESTAMP"/>
        <result property="startTime" column="start_time" jdbcType="TIMESTAMP"/>
        <result property="endTime" column="end_time" jdbcType="TIMESTAMP"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="CourseMap">
        select
          id, course_type_id, teacher_id, day_time, start_time, end_time, status, del_flag, create_by, create_time, update_by, update_time
        from rich-hao.course
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="CourseMap">
        select
          id, course_type_id, teacher_id, day_time, start_time, end_time, status, del_flag, create_by, create_time, update_by, update_time
        from rich-hao.course
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="CourseMap">
        select
        id, course_type_id, teacher_id, day_time, start_time, end_time, status, del_flag, create_by, create_time,
        update_by, update_time
        from rich-hao.course
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="courseTypeId != null">
                and course_type_id = #{courseTypeId}
            </if>
            <if test="teacherId != null">
                and teacher_id = #{teacherId}
            </if>
            <if test="dayTime != null">
                and day_time = #{dayTime}
            </if>
            <if test="startTime != null">
                and start_time = #{startTime}
            </if>
            <if test="endTime != null">
                and end_time = #{endTime}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag}
            </if>
            <if test="createBy != null and createBy != ''">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null and updateBy != ''">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into rich-hao.course(course_type_id, teacher_id, day_time, start_time, end_time, status, del_flag, create_by, create_time, update_by, update_time)
        values (#{courseTypeId}, #{teacherId}, #{dayTime}, #{startTime}, #{endTime}, #{status}, #{delFlag}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into rich-hao.course(course_type_id, teacher_id, day_time, start_time, end_time, status, del_flag,
        create_by, create_time, update_by, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.courseTypeId}, #{entity.teacherId}, #{entity.dayTime}, #{entity.startTime}, #{entity.endTime},
            #{entity.status}, #{entity.delFlag}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy},
            #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into rich-hao.course(course_type_id, teacher_id, day_time, start_time, end_time, status, del_flag,
        create_by, create_time, update_by, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.courseTypeId}, #{entity.teacherId}, #{entity.dayTime}, #{entity.startTime}, #{entity.endTime},
            #{entity.status}, #{entity.delFlag}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy},
            #{entity.updateTime})
        </foreach>
        on duplicate key update
        course_type_id = values(course_type_id) , teacher_id = values(teacher_id) , day_time = values(day_time) ,
        start_time = values(start_time) , end_time = values(end_time) , status = values(status) , del_flag =
        values(del_flag) , create_by = values(create_by) , create_time = values(create_time) , update_by =
        values(update_by) , update_time = values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update rich-hao.course
        <set>
            <if test="courseTypeId != null">
                course_type_id = #{courseTypeId},
            </if>
            <if test="teacherId != null">
                teacher_id = #{teacherId},
            </if>
            <if test="dayTime != null">
                day_time = #{dayTime},
            </if>
            <if test="startTime != null">
                start_time = #{startTime},
            </if>
            <if test="endTime != null">
                end_time = #{endTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
            <if test="createBy != null and createBy != ''">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from rich-hao.course where id = #{id}
    </delete>

</mapper>