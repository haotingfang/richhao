<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.mapper.UserInfoMapper">

    <resultMap type="com.example.common.core.domain.entity.UserInfo" id="UserInfoResult">
        <id property="userId" column="user_id"/>
        <result property="openId" column="open_id"/>
        <result property="userName" column="user_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="userType" column="user_type"/>
        <result property="gender" column="gender"/>
        <result property="language" column="language"/>
        <result property="country" column="country"/>
        <result property="province" column="province"/>
        <result property="city" column="city"/>
        <result property="email" column="email"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="avatarUrl" column="avatar_url"/>
        <result property="password" column="password"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
<!--
        <collection  property="roles"   javaType="java.util.List"     resultMap="RoleResult" />
-->
    </resultMap>




    <sql id="selectUserVoSimple">
        select u.user_id, u.open_id, u.user_name, u.nick_name, u.user_type, u.gender, u.language,
        u.country, u.province, u.city, u.email, u.phone_number, u.avatar_url, u.password,
        u.status, u.del_flag, u.create_by, u.create_time, u.update_by, u.update_time
        from user_info u
    </sql>

    <select id="selectUserByUserName" parameterType="String" resultMap="UserInfoResult">
        <include refid="selectUserVoSimple"/>
        where u.user_name = #{userName}
    </select>

    <select id="selectUserByUserId" parameterType="Long" resultMap="UserInfoResult">
        <include refid="selectUserVoSimple"/>
        where u.user_id = #{userId}
    </select>



    <select id="selectUserByOpenId" parameterType="String" resultMap="UserInfoResult">
        <include refid="selectUserVoSimple"/>
        where u.open_id = #{openId}
    </select>

    <update id="updateUserById" parameterType="com.example.common.core.domain.entity.UserInfo">
        update user_info
        <set>
            <if test="openId != null">
                open_id = #{openId,jdbcType=VARCHAR},
            </if>
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
            <if test="email != null and email != ''">email = #{email},</if>
            <if test="phoneNumber != null and phoneNumber != ''">phoneNumber = #{phoneNumber},</if>
            <if test="gender != null and gender != ''">gender = #{gender},</if>
            <if test="avatarUrl != null and avatarUrl != ''">avatar_url = #{avatarUrl},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <insert id="addUser" parameterType="com.example.common.core.domain.entity.UserInfo">
        insert into user_info(
            open_id,
            user_name,
            nick_name,
            user_type,
            gender,
            language,
            country,
            province,
            city,
            email,
            phone_number,
            avatar_url,
            password,
            status,
            del_flag,
            create_by,
            create_time,
            update_by,
            update_time
            )
        values (
            #{openId,jdbcType=VARCHAR},
            #{userName,jdbcType=VARCHAR},
            #{nickName,jdbcType=VARCHAR},
            #{userType,jdbcType=INTEGER},
            #{gender,jdbcType=INTEGER},
            #{language,jdbcType=VARCHAR},
            #{country,jdbcType=VARCHAR},
            #{province,jdbcType=VARCHAR},
            #{city,jdbcType=VARCHAR},
            #{email,jdbcType=VARCHAR},
            #{phoneNumber,jdbcType=VARCHAR},
            #{avatarUrl,jdbcType=VARCHAR},
            #{password,jdbcType=VARCHAR},
            #{status,jdbcType=INTEGER},
            #{delFlag,jdbcType=INTEGER},
            #{createBy,jdbcType=INTEGER},
            #{createTime,jdbcType=TIMESTAMP},
            #{updateBy,jdbcType=INTEGER},
            #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <select id="selectUserList" resultMap="UserInfoResult">
        <include refid="selectUserVoSimple"/>
         where ( u.del_flag = 0 or u.del_flag is null)
        <if test="userName != null and userName != ''">
            AND u.user_name like concat('%', #{userName}, '%')
        </if>
        <if test="status != null and status != ''">
            AND u.status = #{status}
        </if>
        <if test="phoneNumber != null and phoneNumber != ''">
            AND u.phone_number like concat('%', #{phoneNumber}, '%')
        </if>
        <if test="beginTime != null and beginTime != ''"><!-- 开始时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d')
        </if>
        <if test="endTime != null and endTime != ''"><!-- 结束时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')
        </if>
    </select>

    <update id="deleteUsers">
        update user_info
        <set>
            del_flag = 2,
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy},
            </if>
            update_time = sysdate()
        </set>
        where user_id in
        <foreach collection="ids" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </update>


</mapper>
